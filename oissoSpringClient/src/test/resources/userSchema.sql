-- ************************************************
-- Data schema for client customed authories.
-- 以下為本程式所用之資料庫(自訂授權)
-- ************************************************
create table IF NOT EXISTS userdata(
      userid  varchar(50) not null primary key,
      username varchar(50) ,
      city varchar(50),
      roles text);
--wning to h2 in-memory mode can't persistent datga, so we need to prepare data in advanced.
insert into userdata select 'admin','SuperVisor','Kaohsiung','ROLE_ADMIN,ROLE_USER'
where not exists(select 1 from userdata where userid='admin');
insert into userdata select 'user','Common User','Taipei','ROLE_USER'
where not exists(select 1 from userdata where userid='user');


-- ************************************************
-- Data schema for OISSO, 以下為授權中心使用之資料庫
-- ************************************************
create table IF NOT EXISTS users(
      userid varchar(50) not null primary key,
      username varchar(50) ,
      password varchar(50) not null,
      city varchar(50),
      enabled boolean not null);

create table IF NOT EXISTS authorities (
      userid varchar(50) not null,
      authority varchar(50) not null,
      constraint fk_authorities_users foreign key(userid) references users(userid));
create unique index IF NOT EXISTS  ix_auth_username on authorities (userid,authority);
--User Information
insert into users select 'admin','SuperVisor','admin','Kaohsiung',TRUE
where not exists(select 1 from users where userid='admin');
insert into users select 'user','Common User','user','Taipei',TRUE
where not exists(select 1 from users where userid='user');
insert into authorities select 'user','ROLE_USER'
where not exists(select 1 from authorities where userid='user' and authority='ROLE_USER');
insert into authorities select 'admin','ROLE_USER'
where not exists(select 1 from authorities where userid='admin' and authority='ROLE_USER');
insert into authorities select 'admin','ROLE_ADMIN'
where not exists(select 1 from authorities where userid='admin' and authority='ROLE_ADMIN');

create table IF NOT EXISTS groups (
  id bigint generated by default as identity(start with 0) primary key,
  group_name varchar(50) not null);

create table IF NOT EXISTS group_authorities (
  group_id bigint not null,
  authority varchar(50) not null,
  constraint fk_group_authorities_group foreign key(group_id) references groups(id));

create table IF NOT EXISTS group_members (
  id bigint generated by default as identity(start with 0) primary key,
  userid varchar(50) not null,
  group_id bigint not null,
  constraint fk_group_members_group foreign key(group_id) references groups(id));

create table IF NOT EXISTS persistent_logins (
  userid varchar(64) not null,
  series varchar(64) primary key,
  token varchar(64) not null,
  last_used timestamp not null);
